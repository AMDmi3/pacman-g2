env = Environment()
env.Import(['env'])
env.Export(['env'])

flib_sources = [
	'kernel/fobject.cpp',
	'kernel/fstr.cpp',
	'fstdlib/canonicalize.c',
	'fstring/basename.c',
	'fstring/case.c',
	'fstring/dirname.c',
	'hash/md5.c',
	'hash/md5driver.c',
	'hash/sha1.c',
	'io/archive.c',
	'io/ffilelock.c',
	'io/ftp.c',
	'util/fabstractlogger.cpp',
	'util/fdispatchlogger.cpp',
	'util/ffilelogger.cpp',
	'util/flog.cpp',
	'util/fptrlist.cpp',
	'util/fstringlist.cpp',
	'util/fsyslogger.cpp',
	'util/log.c',
	'util/time.c',
	'fstring.c',
]

libpacman_sources = [
	'db/fakedb.cpp',
	'db/localdb.cpp',
	'db/localdb_files.cpp',
	'db/syncdb.cpp',
	'package/fpmpackage.cpp',
	'package/packagecache.cpp',
	'config_parser.cpp',
	'conflict.cpp',
	'db.cpp',
	'database_cache.cpp',
	'deps.cpp',
	'error.cpp',
	'group.cpp',
	'handle.cpp',
	'package.cpp',
	'packages_transaction.cpp',
	'pacman.cpp',
	'server.cpp',
	'sync.cpp',
	'trans.cpp',
	'trans_sysupgrade.cpp',
	'util.cpp',
	'versioncmp.cpp',
]
libpacman_sources.extend(flib_sources)

env.Append(CPPPATH = ['/usr/include/curl'])

env.ParseConfig('pkg-config --libs --cflags libarchive libcurl')

if env['static']:
	env.StaticLibrary('libpacman', libpacman_sources)

if env['shared']:
	env.SharedLibrary('libpacman', libpacman_sources)
